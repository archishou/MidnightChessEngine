#pragma once
#include "../../board/types/piece.h"
#include "../types.h"
constexpr Score PAWN_TABLE[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(126, 159),    S(125, 155),    S(80, 152),     S(116, 125),    S(75, 134),     S(101, 145),    S(45, 174),     S(40, 184),
        S(1, 48),       S(11, 40),      S(40, 39),      S(60, 6),       S(74, 19),      S(91, 23),      S(42, 37),      S(16, 51),
        S(-5, 20),      S(0, 8),        S(1, 10),       S(25, -18),     S(26, -3),      S(44, 2),       S(6, 11),       S(-6, 23),
        S(-12, 9),      S(-19, 7),      S(-2, -6),      S(8, -12),      S(12, -5),      S(23, -10),     S(3, -4),       S(-5, -2),
        S(-19, 4),      S(-21, 8),      S(-9, 10),      S(-4, 6),       S(3, 22),       S(-11, 22),     S(-9, 6),       S(-26, 5),
        S(-11, 17),     S(-3, 16),      S(-8, 32),      S(-6, 16),      S(-0, 41),      S(7, 38),       S(12, 16),      S(-32, 6),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score KNIGHT_TABLE[] = {
        S(-219, 0),     S(-122, 38),    S(-75, 78),     S(5, 46),       S(116, 37),     S(-145, 71),    S(-38, 4),      S(-137, -44),
        S(-22, 16),     S(-28, 41),     S(43, 27),      S(31, 61),      S(38, 44),      S(72, 12),      S(-9, 29),      S(6, 3),
        S(-39, 17),     S(23, 29),      S(42, 73),      S(76, 70),      S(87, 52),      S(116, 53),     S(67, 17),      S(58, -10),
        S(27, 23),      S(48, 45),      S(61, 70),      S(98, 71),      S(71, 74),      S(88, 73),      S(50, 51),      S(62, 28),
        S(14, 31),      S(35, 30),      S(56, 69),      S(82, 72),      S(86, 64),      S(71, 68),      S(91, 37),      S(33, 36),
        S(2, -21),      S(22, 23),      S(42, 38),      S(51, 61),      S(61, 50),      S(51, 27),      S(49, 9),       S(14, 26),
        S(-25, -13),    S(-15, 14),     S(12, 3),       S(33, 32),      S(29, 42),      S(26, 2),       S(6, 12),       S(18, -12),
        S(-125, 5),     S(-7, -16),     S(-29, 9),      S(-5, 19),      S(10, 7),       S(2, 14),       S(-7, 9),       S(-44, -34),
};
constexpr Score BISHOP_TABLE[] = {
        S(-36, 31),     S(7, 41),       S(-103, 72),    S(-64, 77),     S(-55, 79),     S(-82, 60),     S(0, 46),       S(45, 17),
        S(-15, 43),     S(13, 34),      S(13, 46),      S(-13, 41),     S(6, 47),       S(51, 37),      S(-7, 38),      S(-19, 34),
        S(26, 44),      S(39, 37),      S(68, 38),      S(35, 39),      S(61, 31),      S(69, 56),      S(75, 38),      S(36, 52),
        S(2, 53),       S(36, 42),      S(26, 51),      S(78, 31),      S(52, 34),      S(53, 39),      S(33, 49),      S(27, 62),
        S(14, 44),      S(24, 32),      S(40, 47),      S(51, 32),      S(60, 22),      S(27, 43),      S(28, 23),      S(39, 34),
        S(18, 26),      S(37, 30),      S(41, 41),      S(35, 40),      S(32, 49),      S(45, 31),      S(42, 17),      S(41, 17),
        S(36, 11),      S(42, 1),       S(44, 17),      S(25, 28),      S(31, 26),      S(24, 10),      S(56, 22),      S(34, -4),
        S(44, -16),     S(27, 17),      S(16, 58),      S(16, 45),      S(6, 39),       S(9, 48),       S(5, 29),       S(22, -16),
};
constexpr Score ROOK_TABLE[] = {
        S(44, 66),      S(44, 69),      S(6, 74),       S(13, 75),      S(64, 58),      S(58, 54),      S(38, 61),      S(111, 50),
        S(23, 75),      S(17, 80),      S(47, 72),      S(63, 70),      S(66, 61),      S(106, 39),     S(49, 61),      S(62, 58),
        S(-9, 68),      S(28, 59),      S(44, 54),      S(56, 49),      S(63, 42),      S(113, 40),     S(139, 24),     S(64, 35),
        S(-7, 58),      S(5, 53),       S(29, 56),      S(44, 44),      S(38, 47),      S(57, 40),      S(29, 43),      S(13, 50),
        S(-27, 51),     S(-21, 54),     S(-9, 48),      S(6, 45),       S(4, 42),       S(20, 31),      S(25, 31),      S(8, 28),
        S(-33, 28),     S(-16, 32),     S(-13, 29),     S(-7, 28),      S(-2, 28),      S(18, 13),      S(28, 19),      S(0, 10),
        S(-44, 29),     S(-12, 21),     S(-22, 30),     S(-12, 26),     S(-5, 24),      S(1, 14),       S(3, 12),       S(-71, 31),
        S(-16, 33),     S(-17, 32),     S(-10, 27),     S(1, 16),       S(-2, 17),      S(4, 24),       S(-8, 24),      S(-4, 9),
};
constexpr Score QUEEN_TABLE[] = {
        S(-19, 56),     S(-32, 126),    S(6, 84),       S(41, 60),      S(85, 73),      S(98, 64),      S(90, 82),      S(56, 83),
        S(-6, 54),      S(-45, 107),    S(-16, 86),     S(-24, 99),     S(-27, 118),    S(59, 86),      S(20, 116),     S(52, 77),
        S(-10, 16),     S(-6, 26),      S(18, 5),       S(-6, 54),      S(4, 66),       S(92, 33),      S(111, 19),     S(16, 90),
        S(-8, 17),      S(-1, 29),      S(-14, 32),     S(-4, 15),      S(11, 32),      S(30, 51),      S(43, 66),      S(22, 99),
        S(0, 12),       S(7, 27),       S(11, 1),       S(8, 11),       S(17, -3),      S(30, 18),      S(45, 16),      S(29, 25),
        S(-7, -22),     S(30, -65),     S(20, -17),     S(13, -26),     S(18, -21),     S(25, -16),     S(46, -40),     S(19, -10),
        S(-13, -13),    S(18, -45),     S(30, -86),     S(15, -27),     S(19, -35),     S(32, -98),     S(25, -72),     S(-13, -18),
        S(13, -47),     S(-16, -23),    S(1, -38),      S(4, 39),       S(-3, -22),     S(-7, -57),     S(21, -59),     S(-11, -75),
};
constexpr Score KING_TABLE[] = {
        S(-68, -123),   S(215, -91),    S(208, -69),    S(118, -62),    S(-172, -6),    S(-108, 21),    S(67, -24),     S(-13, -55),
        S(169, -71),    S(160, 7),      S(137, 13),     S(157, 3),      S(109, 16),     S(111, 31),     S(12, 43),      S(-152, 8),
        S(45, 2),       S(134, 25),     S(164, 38),     S(72, 46),      S(152, 35),     S(171, 57),     S(203, 34),     S(-41, 7),
        S(-22, -3),     S(38, 36),      S(84, 51),      S(61, 79),      S(22, 79),      S(77, 51),      S(49, 34),      S(-103, 8),
        S(-71, -23),    S(104, -11),    S(51, 39),      S(-1, 68),      S(22, 65),      S(15, 40),      S(11, 13),      S(-84, -14),
        S(-63, -24),    S(-6, 2),       S(-5, 24),      S(-6, 39),      S(3, 38),       S(2, 22),       S(-6, 3),       S(-47, -27),
        S(-52, -26),    S(-56, -2),     S(-20, 7),      S(-83, 25),     S(-44, 19),     S(-50, 15),     S(-51, 1),      S(-50, -32),
        S(-90, -90),    S(-41, -54),    S(-84, -14),    S(-96, -18),    S(-105, -20),   S(-75, -24),    S(-49, -43),    S(-60, -90),
};
constexpr Score PASSED_PAWN_BONUS[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(126, 159),    S(125, 155),    S(80, 152),     S(116, 125),    S(75, 134),     S(101, 145),    S(45, 174),     S(40, 184),
        S(80, 197),     S(53, 199),     S(54, 160),     S(25, 161),     S(14, 136),     S(17, 155),     S(-22, 186),    S(20, 182),
        S(36, 115),     S(34, 107),     S(29, 90),      S(14, 90),      S(16, 74),      S(17, 80),      S(-8, 110),     S(10, 93),
        S(18, 64),      S(-6, 67),      S(-13, 64),     S(-2, 59),      S(-9, 56),      S(-40, 62),     S(-7, 75),      S(-6, 64),
        S(6, 24),       S(-14, 36),     S(-7, 23),      S(-24, 28),     S(-8, 16),      S(6, 9),        S(22, 31),      S(27, 22),
        S(-5, 18),      S(4, 20),       S(1, 5),        S(7, 9),        S(-5, 8),       S(2, -3),       S(20, 12),      S(-5, 26),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score BLOCKED_PASSED_PAWN_PENALTY[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(-8, -145),    S(67, -201),    S(70, -185),    S(79, -216),    S(95, -195),    S(123, -278),   S(13, -281),    S(-11, -252),
        S(2, -117),     S(41, -147),    S(21, -142),    S(22, -122),    S(11, -104),    S(69, -145),    S(34, -176),    S(-62, -156),
        S(27, -73),     S(6, -76),      S(10, -66),     S(5, -57),      S(-7, -46),     S(-8, -66),     S(24, -75),     S(12, -98),
        S(18, -21),     S(16, -40),     S(-18, -33),    S(-1, -29),     S(-28, -25),    S(28, -48),     S(-105, -36),   S(10, -35),
        S(3, -8),       S(9, -3),       S(-34, -10),    S(-1, -38),     S(-36, -14),    S(-39, -2),     S(-35, 27),     S(-82, -3),
        S(3, -19),      S(-2, -33),     S(-16, -9),     S(15, -68),     S(32, -123),    S(43, -25),     S(-105, 3),     S(14, -30),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};

