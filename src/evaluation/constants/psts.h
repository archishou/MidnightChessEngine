#pragma once
#include "../../board/types/piece.h"
#include "../types.h"
constexpr Score PAWN_TABLE[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(128, 160),    S(126, 156),    S(82, 151),     S(118, 124),    S(77, 134),     S(101, 144),    S(44, 174),     S(41, 184),
        S(0, 48),       S(11, 40),      S(40, 39),      S(60, 5),       S(75, 18),      S(92, 22),      S(42, 36),      S(16, 51),
        S(-5, 20),      S(0, 7),        S(1, 9),        S(25, -19),     S(26, -4),      S(44, 1),       S(6, 11),       S(-6, 23),
        S(-13, 9),      S(-19, 6),      S(-2, -7),      S(8, -13),      S(12, -5),      S(23, -11),     S(3, -4),       S(-5, -2),
        S(-20, 4),      S(-21, 7),      S(-9, 9),       S(-5, 5),       S(3, 21),       S(-10, 21),     S(-9, 7),       S(-27, 5),
        S(-11, 16),     S(-3, 15),      S(-9, 31),      S(-6, 16),      S(-1, 41),      S(7, 37),       S(13, 16),      S(-32, 6),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score KNIGHT_TABLE[] = {
        S(-220, -0),    S(-124, 39),    S(-75, 80),     S(7, 46),       S(119, 38),     S(-145, 72),    S(-39, 6),      S(-139, -43),
        S(-22, 17),     S(-28, 42),     S(45, 28),      S(32, 63),      S(39, 45),      S(73, 12),      S(-8, 30),      S(7, 3),
        S(-39, 17),     S(24, 30),      S(43, 75),      S(78, 71),      S(88, 54),      S(117, 54),     S(68, 18),      S(60, -10),
        S(28, 24),      S(49, 46),      S(62, 72),      S(99, 73),      S(72, 76),      S(90, 75),      S(51, 52),      S(63, 29),
        S(15, 32),      S(36, 31),      S(57, 71),      S(83, 74),      S(88, 66),      S(73, 69),      S(93, 38),      S(33, 37),
        S(2, -21),      S(23, 23),      S(43, 39),      S(52, 62),      S(62, 51),      S(52, 28),      S(50, 10),      S(15, 27),
        S(-25, -12),    S(-15, 14),     S(13, 4),       S(34, 33),      S(30, 43),      S(27, 3),       S(7, 13),       S(19, -11),
        S(-126, 6),     S(-7, -16),     S(-28, 9),      S(-4, 20),      S(11, 8),       S(2, 15),       S(-7, 9),       S(-44, -35),
};
constexpr Score BISHOP_TABLE[] = {
        S(-36, 32),     S(7, 42),       S(-103, 73),    S(-64, 78),     S(-56, 80),     S(-84, 61),     S(0, 47),       S(46, 18),
        S(-15, 44),     S(13, 35),      S(13, 47),      S(-13, 42),     S(6, 48),       S(52, 38),      S(-7, 39),      S(-19, 35),
        S(27, 45),      S(39, 37),      S(69, 39),      S(35, 40),      S(62, 32),      S(70, 57),      S(75, 39),      S(37, 53),
        S(3, 54),       S(37, 42),      S(26, 52),      S(79, 32),      S(52, 35),      S(54, 40),      S(34, 50),      S(27, 64),
        S(14, 44),      S(25, 33),      S(40, 48),      S(51, 33),      S(61, 23),      S(28, 44),      S(29, 24),      S(40, 35),
        S(19, 26),      S(38, 30),      S(42, 41),      S(36, 41),      S(33, 50),      S(46, 32),      S(43, 17),      S(41, 17),
        S(37, 11),      S(43, 2),       S(44, 17),      S(26, 28),      S(31, 27),      S(25, 10),      S(57, 22),      S(35, -4),
        S(45, -16),     S(28, 18),      S(17, 59),      S(16, 46),      S(7, 39),       S(10, 49),      S(6, 29),       S(22, -16),
};
constexpr Score ROOK_TABLE[] = {
        S(44, 67),      S(45, 70),      S(6, 75),       S(13, 76),      S(65, 59),      S(59, 55),      S(37, 63),      S(112, 51),
        S(23, 77),      S(17, 81),      S(48, 73),      S(64, 71),      S(66, 62),      S(108, 39),     S(50, 62),      S(63, 59),
        S(-9, 69),      S(27, 60),      S(44, 55),      S(56, 50),      S(63, 43),      S(114, 40),     S(140, 24),     S(65, 36),
        S(-7, 59),      S(4, 54),       S(29, 57),      S(44, 45),      S(38, 49),      S(57, 41),      S(29, 43),      S(13, 51),
        S(-27, 52),     S(-21, 55),     S(-9, 49),      S(6, 46),       S(4, 44),       S(20, 31),      S(25, 31),      S(8, 28),
        S(-33, 28),     S(-16, 32),     S(-14, 30),     S(-7, 29),      S(-2, 29),      S(18, 13),      S(29, 20),      S(0, 10),
        S(-45, 29),     S(-12, 21),     S(-22, 30),     S(-12, 26),     S(-5, 24),      S(2, 14),       S(3, 11),       S(-71, 31),
        S(-16, 33),     S(-17, 32),     S(-10, 27),     S(1, 16),       S(-2, 17),      S(4, 25),       S(-8, 23),      S(-3, 9),
};
constexpr Score QUEEN_TABLE[] = {
        S(-20, 58),     S(-32, 128),    S(6, 85),       S(41, 61),      S(86, 74),      S(101, 64),     S(90, 83),      S(57, 85),
        S(-6, 56),      S(-46, 109),    S(-17, 87),     S(-25, 101),    S(-28, 121),    S(59, 87),      S(20, 119),     S(53, 79),
        S(-10, 16),     S(-6, 27),      S(18, 6),       S(-6, 55),      S(4, 68),       S(93, 33),      S(113, 20),     S(17, 91),
        S(-8, 17),      S(-1, 29),      S(-14, 33),     S(-4, 16),      S(11, 33),      S(30, 52),      S(43, 66),      S(22, 100),
        S(0, 12),       S(7, 27),       S(11, 2),       S(8, 12),       S(17, -2),      S(30, 18),      S(45, 16),      S(29, 25),
        S(-7, -22),     S(30, -66),     S(20, -17),     S(13, -26),     S(18, -21),     S(26, -17),     S(47, -40),     S(19, -10),
        S(-13, -13),    S(19, -46),     S(30, -87),     S(16, -27),     S(20, -35),     S(33, -99),     S(26, -73),     S(-13, -17),
        S(13, -47),     S(-16, -23),    S(1, -39),      S(4, 39),       S(-3, -23),     S(-7, -58),     S(21, -60),     S(-12, -74),
};
constexpr Score KING_TABLE[] = {
        S(-65, -124),   S(228, -94),    S(210, -69),    S(125, -61),    S(-170, -5),    S(-102, 18),    S(81, -28),     S(-10, -56),
        S(175, -73),    S(167, 4),      S(142, 12),     S(164, 2),      S(113, 17),     S(110, 29),     S(14, 41),      S(-150, 8),
        S(54, -0),      S(138, 23),     S(167, 36),     S(72, 45),      S(154, 34),     S(174, 55),     S(208, 32),     S(-39, 6),
        S(-19, -4),     S(35, 36),      S(83, 50),      S(59, 76),      S(21, 77),      S(76, 48),      S(48, 32),      S(-104, 7),
        S(-71, -23),    S(101, -11),    S(48, 38),      S(-3, 67),      S(19, 64),      S(13, 38),      S(10, 11),      S(-85, -15),
        S(-69, -22),    S(-11, 3),      S(-9, 24),      S(-8, 39),      S(1, 38),       S(1, 20),       S(-7, 2),       S(-48, -28),
        S(-54, -24),    S(-58, -1),     S(-23, 8),      S(-86, 26),     S(-47, 20),     S(-52, 13),     S(-53, 1),      S(-52, -32),
        S(-92, -89),    S(-43, -54),    S(-87, -12),    S(-100, -16),   S(-107, -18),   S(-77, -25),    S(-50, -42),    S(-61, -90),
};
constexpr Score PASSED_PAWN_BONUS[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(128, 160),    S(126, 156),    S(82, 151),     S(118, 124),    S(77, 134),     S(101, 144),    S(44, 174),     S(41, 184),
        S(81, 199),     S(54, 200),     S(56, 159),     S(27, 160),     S(15, 135),     S(18, 152),     S(-24, 186),    S(20, 181),
        S(37, 116),     S(35, 107),     S(30, 89),      S(14, 90),      S(17, 72),      S(17, 77),      S(-12, 109),    S(8, 92),
        S(18, 64),      S(-6, 68),      S(-12, 63),     S(-2, 58),      S(-9, 53),      S(-42, 58),     S(-14, 73),     S(-7, 62),
        S(6, 24),       S(-14, 36),     S(-6, 21),      S(-24, 27),     S(-8, 13),      S(4, 6),        S(13, 28),      S(26, 20),
        S(-5, 18),      S(4, 20),       S(2, 3),        S(7, 8),        S(-5, 6),       S(-2, -6),      S(10, 9),       S(-6, 24),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score BLOCKED_PASSED_PAWN_PENALTY[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(-9, -146),    S(67, -203),    S(71, -186),    S(79, -218),    S(97, -198),    S(127, -280),   S(13, -283),    S(-15, -254),
        S(3, -120),     S(42, -150),    S(21, -144),    S(22, -123),    S(11, -106),    S(68, -146),    S(37, -179),    S(-64, -159),
        S(28, -75),     S(6, -77),      S(10, -67),     S(5, -58),      S(-7, -46),     S(-8, -66),     S(26, -77),     S(14, -101),
        S(18, -21),     S(17, -42),     S(-18, -33),    S(-0, -29),     S(-27, -26),    S(29, -49),     S(-104, -38),   S(11, -38),
        S(3, -8),       S(8, -2),       S(-34, -10),    S(-1, -39),     S(-36, -14),    S(-36, -5),     S(-33, 26),     S(-81, -4),
        S(3, -19),      S(-2, -33),     S(-17, -7),     S(17, -69),     S(31, -124),    S(44, -27),     S(-96, 0),      S(14, -31),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};

