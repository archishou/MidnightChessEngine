#pragma once
#include "../../board/types/piece.h"
#include "../types.h"
constexpr Score PAWN_TABLE[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(124, 164),    S(117, 163),    S(77, 155),     S(112, 130),    S(73, 139),     S(99, 148),     S(44, 178),     S(40, 186),
        S(-1, 51),      S(7, 41),       S(36, 35),      S(50, 23),      S(70, 17),      S(88, 22),      S(41, 39),      S(17, 48),
        S(-6, 20),      S(-4, 14),      S(-1, 8),       S(23, -15),     S(22, 1),       S(43, 0),       S(4, 12),       S(-7, 24),
        S(-13, 9),      S(-19, 7),      S(-2, -7),      S(8, -11),      S(12, -4),      S(22, -6),      S(2, -4),       S(-5, -1),
        S(-19, 3),      S(-19, 4),      S(-8, 7),       S(-4, 5),       S(4, 19),       S(-10, 19),     S(-8, 3),       S(-27, 4),
        S(-11, 15),     S(-1, 9),       S(-7, 23),      S(-6, 23),      S(0, 37),       S(9, 32),       S(13, 16),      S(-32, 5),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score KNIGHT_TABLE[] = {
        S(-223, -3),    S(-126, 30),    S(-80, 71),     S(8, 42),       S(117, 32),     S(-144, 61),    S(-38, -5),     S(-144, -43),
        S(-22, 15),     S(-30, 44),     S(44, 27),      S(31, 68),      S(37, 50),      S(70, 14),      S(-10, 32),     S(3, 3),
        S(-43, 16),     S(23, 32),      S(42, 73),      S(78, 71),      S(89, 56),      S(116, 52),     S(69, 15),      S(60, -13),
        S(26, 28),      S(50, 48),      S(61, 75),      S(98, 80),      S(71, 87),      S(90, 75),      S(51, 59),      S(62, 31),
        S(17, 25),      S(35, 36),      S(57, 71),      S(83, 82),      S(87, 75),      S(72, 69),      S(91, 47),      S(35, 34),
        S(3, -5),       S(22, 19),      S(45, 35),      S(50, 68),      S(59, 61),      S(53, 26),      S(49, 10),      S(18, 8),
        S(-24, -15),    S(-16, 18),     S(9, 19),       S(35, 31),      S(31, 40),      S(24, 15),      S(9, 11),       S(19, -9),
        S(-122, 1),     S(-5, -18),     S(-27, 7),      S(-4, 26),      S(11, 11),      S(3, 11),       S(-0, -12),     S(-43, -24),
};
constexpr Score BISHOP_TABLE[] = {
        S(-35, 32),     S(3, 41),       S(-104, 70),    S(-70, 76),     S(-57, 77),     S(-85, 60),     S(3, 45),       S(47, 15),
        S(-16, 46),     S(12, 38),      S(11, 50),      S(-14, 44),     S(4, 50),       S(49, 41),      S(-7, 42),      S(-20, 38),
        S(26, 46),      S(38, 39),      S(68, 40),      S(34, 42),      S(62, 33),      S(70, 58),      S(73, 43),      S(37, 55),
        S(2, 55),       S(38, 42),      S(24, 54),      S(78, 34),      S(52, 38),      S(53, 42),      S(36, 46),      S(28, 62),
        S(13, 47),      S(24, 34),      S(41, 49),      S(51, 36),      S(62, 22),      S(29, 42),      S(29, 25),      S(40, 36),
        S(19, 29),      S(37, 33),      S(41, 44),      S(36, 46),      S(34, 50),      S(44, 36),      S(41, 22),      S(43, 13),
        S(36, 13),      S(43, 4),       S(42, 23),      S(27, 28),      S(32, 29),      S(24, 15),      S(61, 4),       S(36, -9),
        S(41, -6),      S(27, 21),      S(21, 39),      S(15, 46),      S(6, 40),       S(14, 42),      S(4, 33),       S(20, -6),
};
constexpr Score ROOK_TABLE[] = {
        S(44, 69),      S(44, 73),      S(4, 81),       S(11, 81),      S(64, 63),      S(60, 59),      S(35, 66),      S(108, 55),
        S(22, 76),      S(16, 80),      S(46, 74),      S(64, 71),      S(64, 64),      S(105, 40),     S(49, 61),      S(61, 58),
        S(-9, 67),      S(27, 58),      S(41, 55),      S(57, 48),      S(61, 44),      S(113, 40),     S(141, 22),     S(65, 34),
        S(-7, 59),      S(3, 55),       S(28, 59),      S(44, 47),      S(38, 50),      S(55, 43),      S(29, 43),      S(14, 50),
        S(-26, 51),     S(-22, 55),     S(-10, 50),     S(4, 48),       S(3, 44),       S(19, 32),      S(24, 32),      S(8, 28),
        S(-33, 28),     S(-17, 33),     S(-14, 31),     S(-10, 32),     S(-3, 30),      S(16, 15),      S(28, 19),      S(-0, 12),
        S(-45, 30),     S(-12, 20),     S(-22, 31),     S(-12, 27),     S(-6, 26),      S(1, 15),       S(5, 9),        S(-72, 35),
        S(-13, 22),     S(-16, 30),     S(-10, 27),     S(0, 17),       S(-2, 18),      S(5, 22),       S(-7, 22),      S(1, -0),
};
constexpr Score QUEEN_TABLE[] = {
        S(-17, 41),     S(-32, 112),    S(8, 77),       S(35, 56),      S(84, 66),      S(113, 44),     S(96, 61),      S(60, 68),
        S(-5, 43),      S(-46, 101),    S(-18, 91),     S(-26, 107),    S(-27, 122),    S(61, 85),      S(22, 108),     S(51, 80),
        S(-13, 24),     S(-9, 39),      S(9, 28),       S(-8, 71),      S(1, 85),       S(90, 56),      S(107, 45),     S(16, 104),
        S(-10, 20),     S(-1, 31),      S(-17, 45),     S(-2, 30),      S(7, 58),       S(31, 61),      S(45, 72),      S(28, 86),
        S(3, 5),        S(3, 38),       S(12, 11),      S(11, 19),      S(14, 21),      S(29, 30),      S(45, 21),      S(26, 47),
        S(-9, -15),     S(26, -38),     S(18, -9),      S(12, -13),     S(14, -1),      S(21, 5),       S(41, -11),     S(13, 21),
        S(-15, -9),     S(14, -32),     S(28, -71),     S(14, -18),     S(20, -38),     S(25, -69),     S(23, -64),     S(-15, -3),
        S(10, -58),     S(-13, -42),    S(3, -53),      S(16, -68),     S(-3, -29),     S(-11, -49),    S(25, -79),     S(-14, -74),
};
constexpr Score KING_TABLE[] = {
        S(-73, -122),   S(235, -95),    S(224, -72),    S(142, -65),    S(-161, -5),    S(-92, 16),     S(85, -28),     S(-9, -55),
        S(179, -74),    S(171, 4),      S(143, 11),     S(164, 3),      S(113, 17),     S(103, 31),     S(12, 41),      S(-154, 7),
        S(60, -2),      S(138, 23),     S(162, 36),     S(71, 44),      S(156, 33),     S(174, 54),     S(208, 33),     S(-34, 4),
        S(-22, -3),     S(35, 36),      S(81, 49),      S(56, 75),      S(20, 75),      S(72, 48),      S(44, 32),      S(-107, 7),
        S(-72, -23),    S(100, -12),    S(43, 38),      S(-8, 65),      S(13, 63),      S(8, 37),       S(6, 10),       S(-86, -15),
        S(-68, -23),    S(-10, 1),      S(-13, 24),     S(-12, 39),     S(-5, 38),      S(-3, 19),      S(-9, 1),       S(-48, -29),
        S(-53, -22),    S(-58, 1),      S(-24, 8),      S(-86, 26),     S(-47, 20),     S(-51, 12),     S(-51, 3),      S(-51, -30),
        S(-92, -88),    S(-45, -45),    S(-88, -8),     S(-99, -17),    S(-106, -22),   S(-76, -25),    S(-50, -39),    S(-61, -87),
};
constexpr Score PASSED_PAWN_BONUS[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(124, 164),    S(117, 163),    S(77, 155),     S(112, 130),    S(73, 139),     S(99, 148),     S(44, 178),     S(40, 186),
        S(82, 198),     S(54, 203),     S(56, 165),     S(32, 145),     S(17, 138),     S(19, 154),     S(-23, 185),    S(19, 186),
        S(37, 117),     S(35, 103),     S(30, 91),      S(14, 88),      S(18, 70),      S(16, 79),      S(-13, 110),    S(7, 94),
        S(17, 65),      S(-6, 68),      S(-13, 62),     S(-3, 58),      S(-10, 52),     S(-41, 55),     S(-15, 74),     S(-7, 63),
        S(5, 26),       S(-15, 39),     S(-8, 23),      S(-25, 28),     S(-8, 15),      S(4, 8),        S(13, 32),      S(26, 21),
        S(-8, 21),      S(3, 24),       S(-0, 10),      S(9, 1),        S(-3, 11),      S(-3, -2),      S(8, 9),        S(-8, 26),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score BLOCKED_PASSED_PAWN_PENALTY[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(-10, -157),   S(55, -201),    S(63, -185),    S(67, -216),    S(99, -202),    S(118, -279),   S(6, -279),     S(-17, -258),
        S(1, -122),     S(42, -152),    S(21, -143),    S(22, -123),    S(8, -104),     S(71, -146),    S(36, -181),    S(-64, -160),
        S(23, -68),     S(7, -80),      S(10, -69),     S(5, -55),      S(-6, -47),     S(-8, -65),     S(23, -76),     S(16, -106),
        S(19, -23),     S(16, -41),     S(-18, -34),    S(1, -29),      S(-27, -26),    S(30, -51),     S(-102, -38),   S(9, -38),
        S(5, -9),       S(9, -3),       S(-34, -10),    S(3, -42),      S(-35, -15),    S(-40, -5),     S(-32, 25),     S(-84, -5),
        S(6, -24),      S(-0, -34),     S(-18, -7),     S(8, -64),      S(31, -127),    S(45, -28),     S(-102, 1),     S(13, -30),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};

