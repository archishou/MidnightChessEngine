#pragma once
#include "../../board/types/piece.h"
#include "../types.h"
constexpr Score PAWN_TABLE[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(125, 158),    S(123, 154),    S(79, 151),     S(115, 123),    S(75, 133),     S(100, 144),    S(44, 173),     S(39, 182),
        S(0, 47),       S(10, 40),      S(39, 39),      S(59, 5),       S(74, 18),      S(90, 22),      S(41, 36),      S(16, 50),
        S(-5, 20),      S(0, 8),        S(0, 9),        S(25, -18),     S(25, -3),      S(43, 1),       S(6, 11),       S(-6, 23),
        S(-12, 9),      S(-19, 7),      S(-2, -6),      S(8, -12),      S(12, -5),      S(23, -10),     S(2, -4),       S(-5, -2),
        S(-19, 4),      S(-21, 7),      S(-9, 10),      S(-5, 6),       S(3, 21),       S(-11, 21),     S(-9, 6),       S(-26, 4),
        S(-11, 16),     S(-3, 15),      S(-8, 31),      S(-6, 16),      S(-1, 41),      S(6, 37),       S(12, 15),      S(-32, 6),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score KNIGHT_TABLE[] = {
        S(-217, -0),    S(-122, 38),    S(-75, 77),     S(5, 45),       S(115, 37),     S(-144, 70),    S(-38, 4),      S(-136, -44),
        S(-22, 15),     S(-28, 40),     S(43, 27),      S(31, 61),      S(38, 43),      S(71, 11),      S(-9, 29),      S(6, 3),
        S(-39, 16),     S(23, 29),      S(42, 73),      S(75, 69),      S(86, 52),      S(115, 52),     S(66, 17),      S(58, -10),
        S(26, 23),      S(47, 45),      S(61, 69),      S(97, 71),      S(70, 73),      S(87, 73),      S(49, 50),      S(61, 28),
        S(14, 30),      S(34, 29),      S(55, 69),      S(81, 71),      S(85, 64),      S(71, 67),      S(90, 37),      S(32, 36),
        S(1, -21),      S(21, 22),      S(41, 38),      S(51, 60),      S(60, 49),      S(51, 27),      S(48, 9),       S(14, 26),
        S(-25, -13),    S(-16, 13),     S(12, 3),       S(33, 31),      S(29, 42),      S(25, 2),       S(6, 12),       S(18, -12),
        S(-124, 4),     S(-8, -16),     S(-29, 9),      S(-5, 19),      S(10, 7),       S(1, 14),       S(-7, 9),       S(-44, -34),
};
constexpr Score BISHOP_TABLE[] = {
        S(-35, 31),     S(7, 41),       S(-102, 72),    S(-63, 77),     S(-55, 79),     S(-82, 60),     S(0, 46),       S(44, 17),
        S(-15, 43),     S(13, 34),      S(13, 46),      S(-12, 41),     S(6, 47),       S(51, 36),      S(-7, 38),      S(-19, 34),
        S(26, 44),      S(38, 36),      S(68, 38),      S(34, 39),      S(61, 31),      S(69, 55),      S(74, 38),      S(36, 52),
        S(2, 53),       S(36, 41),      S(26, 51),      S(77, 31),      S(51, 34),      S(53, 39),      S(33, 49),      S(27, 62),
        S(14, 44),      S(24, 32),      S(39, 47),      S(50, 32),      S(60, 22),      S(27, 43),      S(28, 23),      S(39, 34),
        S(18, 26),      S(37, 30),      S(41, 40),      S(35, 40),      S(32, 49),      S(45, 31),      S(42, 17),      S(40, 17),
        S(36, 11),      S(42, 2),       S(43, 17),      S(25, 27),      S(31, 26),      S(24, 10),      S(56, 22),      S(34, -4),
        S(44, -16),     S(27, 17),      S(16, 58),      S(16, 45),      S(6, 39),       S(9, 48),       S(5, 29),       S(22, -16),
};
constexpr Score ROOK_TABLE[] = {
        S(43, 65),      S(44, 68),      S(6, 73),       S(13, 75),      S(63, 58),      S(57, 54),      S(37, 61),      S(111, 49),
        S(23, 75),      S(17, 80),      S(47, 72),      S(63, 69),      S(65, 61),      S(105, 38),     S(48, 61),      S(62, 58),
        S(-9, 68),      S(27, 58),      S(43, 53),      S(55, 49),      S(62, 42),      S(112, 39),     S(138, 24),     S(64, 35),
        S(-7, 58),      S(5, 53),       S(29, 56),      S(44, 44),      S(38, 47),      S(56, 40),      S(29, 43),      S(13, 50),
        S(-26, 51),     S(-21, 54),     S(-8, 48),      S(6, 45),       S(4, 42),       S(20, 30),      S(25, 31),      S(8, 28),
        S(-33, 28),     S(-16, 32),     S(-13, 29),     S(-7, 28),      S(-2, 28),      S(18, 13),      S(28, 19),      S(0, 10),
        S(-44, 29),     S(-12, 21),     S(-21, 30),     S(-12, 25),     S(-5, 24),      S(1, 14),       S(3, 12),       S(-70, 31),
        S(-16, 33),     S(-17, 31),     S(-10, 27),     S(1, 16),       S(-2, 17),      S(4, 24),       S(-8, 24),      S(-4, 9),
};
constexpr Score QUEEN_TABLE[] = {
        S(-19, 56),     S(-31, 125),    S(5, 84),       S(40, 59),      S(85, 72),      S(97, 64),      S(89, 82),      S(56, 82),
        S(-6, 54),      S(-45, 106),    S(-16, 85),     S(-24, 98),     S(-27, 117),    S(59, 85),      S(19, 115),     S(51, 77),
        S(-10, 16),     S(-6, 26),      S(18, 5),       S(-6, 54),      S(4, 65),       S(91, 32),      S(110, 19),     S(16, 89),
        S(-8, 16),      S(-1, 28),      S(-14, 32),     S(-4, 15),      S(10, 32),      S(29, 50),      S(42, 65),      S(22, 98),
        S(0, 12),       S(7, 27),       S(11, 1),       S(8, 11),       S(17, -3),      S(30, 18),      S(44, 15),      S(28, 25),
        S(-7, -22),     S(29, -65),     S(19, -17),     S(13, -26),     S(17, -21),     S(25, -16),     S(46, -39),     S(18, -10),
        S(-13, -13),    S(18, -45),     S(29, -85),     S(15, -27),     S(19, -35),     S(32, -97),     S(25, -72),     S(-13, -18),
        S(13, -47),     S(-16, -23),    S(1, -38),      S(4, 38),       S(-3, -22),     S(-7, -57),     S(20, -58),     S(-11, -74),
};
constexpr Score KING_TABLE[] = {
        S(-67, -122),   S(213, -91),    S(206, -68),    S(117, -61),    S(-171, -6),    S(-108, 21),    S(66, -24),     S(-13, -55),
        S(167, -71),    S(158, 7),      S(136, 13),     S(155, 3),      S(108, 16),     S(110, 31),     S(11, 42),      S(-151, 8),
        S(44, 2),       S(133, 24),     S(162, 38),     S(71, 46),      S(150, 35),     S(169, 57),     S(201, 34),     S(-41, 6),
        S(-21, -3),     S(37, 36),      S(83, 51),      S(60, 78),      S(22, 78),      S(76, 50),      S(49, 34),      S(-103, 7),
        S(-71, -23),    S(104, -11),    S(51, 38),      S(-1, 67),      S(21, 65),      S(15, 40),      S(11, 13),      S(-84, -14),
        S(-62, -24),    S(-6, 2),       S(-5, 24),      S(-6, 39),      S(3, 37),       S(2, 21),       S(-6, 3),       S(-47, -27),
        S(-51, -26),    S(-55, -2),     S(-20, 7),      S(-82, 25),     S(-44, 19),     S(-50, 14),     S(-51, 1),      S(-50, -32),
        S(-89, -89),    S(-41, -54),    S(-84, -14),    S(-96, -18),    S(-104, -20),   S(-75, -24),    S(-48, -42),    S(-59, -89),
};
constexpr Score PASSED_PAWN_BONUS[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(125, 158),    S(123, 154),    S(79, 151),     S(115, 123),    S(75, 133),     S(100, 144),    S(44, 173),     S(39, 182),
        S(79, 196),     S(52, 197),     S(54, 158),     S(25, 159),     S(14, 135),     S(17, 153),     S(-22, 185),    S(20, 180),
        S(36, 114),     S(34, 106),     S(29, 90),      S(14, 89),      S(16, 73),      S(17, 80),      S(-8, 110),     S(9, 92),
        S(18, 63),      S(-6, 67),      S(-13, 63),     S(-2, 59),      S(-9, 55),      S(-39, 61),     S(-6, 74),      S(-6, 64),
        S(6, 24),       S(-14, 35),     S(-7, 23),      S(-24, 28),     S(-8, 16),      S(6, 9),        S(22, 30),      S(27, 21),
        S(-5, 18),      S(4, 20),       S(1, 5),        S(7, 9),        S(-5, 8),       S(2, -3),       S(19, 12),      S(-5, 26),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score BLOCKED_PASSED_PAWN_PENALTY[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(-8, -144),    S(66, -199),    S(70, -183),    S(78, -214),    S(95, -193),    S(122, -276),   S(13, -278),    S(-11, -250),
        S(2, -116),     S(40, -146),    S(20, -141),    S(22, -121),    S(11, -103),    S(68, -144),    S(34, -175),    S(-62, -154),
        S(27, -72),     S(6, -76),      S(10, -66),     S(5, -57),      S(-7, -45),     S(-8, -65),     S(24, -74),     S(12, -97),
        S(18, -21),     S(16, -40),     S(-18, -33),    S(-1, -29),     S(-27, -25),    S(28, -47),     S(-104, -35),   S(10, -35),
        S(3, -8),       S(9, -3),       S(-34, -10),    S(-1, -38),     S(-36, -13),    S(-39, -2),     S(-35, 27),     S(-81, -3),
        S(3, -19),      S(-2, -32),     S(-16, -9),     S(14, -68),     S(32, -122),    S(42, -25),     S(-104, 3),     S(14, -30),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};

