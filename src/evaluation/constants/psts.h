#pragma once
#include "../../board/types/piece.h"
#include "../types.h"
constexpr Score PAWN_TABLE[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(138, 180),    S(131, 179),    S(88, 171),     S(127, 142),    S(85, 151),     S(112, 162),    S(49, 195),     S(48, 204),
        S(-1, 56),      S(8, 45),       S(42, 36),      S(57, 24),      S(84, 15),      S(106, 21),     S(58, 40),      S(28, 50),
        S(-7, 23),      S(-4, 15),      S(-2, 9),       S(24, -17),     S(25, 0),       S(48, -1),      S(6, 12),       S(-6, 25),
        S(-14, 10),     S(-21, 7),      S(-2, -8),      S(9, -12),      S(13, -4),      S(25, -7),      S(3, -5),       S(-5, -2),
        S(-21, 3),      S(-21, 4),      S(-9, 8),       S(-5, 7),       S(4, 21),       S(-12, 22),     S(-9, 4),       S(-29, 4),
        S(-11, 17),     S(-2, 11),      S(-8, 26),      S(-6, 26),      S(0, 41),       S(9, 36),       S(13, 19),      S(-34, 5),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score KNIGHT_TABLE[] = {
        S(-248, -5),    S(-134, 32),    S(-90, 76),     S(2, 45),       S(118, 31),     S(-162, 63),    S(-54, -7),     S(-165, -48),
        S(-25, 16),     S(-33, 47),     S(48, 30),      S(31, 67),      S(37, 42),      S(74, 10),      S(-13, 35),     S(4, -1),
        S(-46, 18),     S(26, 36),      S(47, 79),      S(88, 73),      S(96, 52),      S(119, 52),     S(84, 5),       S(67, -18),
        S(30, 30),      S(55, 53),      S(68, 82),      S(109, 84),     S(83, 86),      S(100, 78),     S(64, 52),      S(71, 27),
        S(18, 29),      S(40, 40),      S(63, 79),      S(91, 91),      S(96, 82),      S(81, 75),      S(100, 50),     S(39, 35),
        S(3, -3),       S(25, 23),      S(50, 41),      S(55, 77),      S(65, 69),      S(58, 31),      S(55, 13),      S(20, 11),
        S(-25, -17),    S(-17, 21),     S(10, 24),      S(38, 37),      S(34, 48),      S(26, 19),      S(10, 14),      S(22, -10),
        S(-134, 2),     S(-5, -17),     S(-31, 10),     S(-5, 30),      S(12, 15),      S(2, 16),       S(-0, -11),     S(-46, -26),
};
constexpr Score BISHOP_TABLE[] = {
        S(-39, 33),     S(4, 43),       S(-112, 75),    S(-80, 81),     S(-62, 82),     S(-101, 65),    S(1, 47),       S(56, 14),
        S(-17, 48),     S(13, 40),      S(12, 54),      S(-18, 47),     S(4, 52),       S(57, 42),      S(-8, 44),      S(-22, 40),
        S(28, 49),      S(42, 41),      S(76, 43),      S(40, 42),      S(72, 32),      S(75, 60),      S(81, 44),      S(42, 54),
        S(3, 59),       S(42, 45),      S(27, 57),      S(88, 35),      S(58, 39),      S(60, 44),      S(39, 49),      S(31, 65),
        S(15, 50),      S(27, 35),      S(45, 53),      S(56, 39),      S(70, 23),      S(32, 46),      S(32, 27),      S(44, 38),
        S(22, 29),      S(41, 35),      S(45, 48),      S(41, 50),      S(38, 56),      S(49, 40),      S(46, 24),      S(48, 13),
        S(40, 13),      S(47, 4),       S(48, 24),      S(30, 31),      S(35, 33),      S(27, 16),      S(67, 5),       S(41, -11),
        S(46, -7),      S(31, 20),      S(23, 43),      S(17, 50),      S(6, 45),       S(15, 47),      S(6, 35),       S(22, -7),
};
constexpr Score ROOK_TABLE[] = {
        S(54, 75),      S(53, 80),      S(14, 87),      S(18, 89),      S(79, 68),      S(72, 64),      S(49, 70),      S(124, 57),
        S(25, 84),      S(20, 88),      S(53, 81),      S(74, 78),      S(74, 70),      S(123, 42),     S(57, 66),      S(68, 63),
        S(-9, 74),      S(30, 65),      S(47, 60),      S(63, 53),      S(70, 47),      S(126, 43),     S(158, 23),     S(75, 36),
        S(-8, 65),      S(4, 60),       S(31, 65),      S(49, 51),      S(43, 55),      S(61, 47),      S(34, 47),      S(17, 55),
        S(-28, 57),     S(-24, 61),     S(-10, 55),     S(6, 53),       S(3, 49),       S(23, 35),      S(28, 35),      S(10, 31),
        S(-36, 32),     S(-18, 36),     S(-15, 34),     S(-11, 35),     S(-3, 34),      S(19, 17),      S(32, 21),      S(-1, 13),
        S(-49, 33),     S(-13, 23),     S(-24, 36),     S(-13, 31),     S(-6, 30),      S(1, 17),       S(6, 10),       S(-79, 38),
        S(-14, 25),     S(-18, 34),     S(-12, 31),     S(-1, 20),      S(-4, 20),      S(5, 24),       S(-9, 25),      S(-0, 1),
};
constexpr Score QUEEN_TABLE[] = {
        S(-18, 59),     S(-34, 136),    S(4, 103),      S(36, 79),      S(87, 97),      S(123, 66),     S(99, 81),      S(57, 86),
        S(-5, 49),      S(-50, 111),    S(-19, 101),    S(-27, 117),    S(-27, 138),    S(69, 106),     S(21, 120),     S(59, 85),
        S(-13, 28),     S(-10, 45),     S(10, 34),      S(-6, 81),      S(6, 100),      S(105, 66),     S(125, 50),     S(34, 110),
        S(-10, 23),     S(-1, 36),      S(-15, 53),     S(-1, 36),      S(9, 69),       S(37, 74),      S(50, 82),      S(35, 98),
        S(4, 5),        S(5, 46),       S(14, 16),      S(14, 26),      S(19, 27),      S(33, 34),      S(51, 25),      S(31, 56),
        S(-8, -14),     S(30, -39),     S(21, -5),      S(15, -9),      S(16, 1),       S(24, 6),       S(46, -10),     S(16, 26),
        S(-15, -7),     S(16, -32),     S(32, -75),     S(16, -18),     S(23, -42),     S(29, -77),     S(26, -71),     S(-14, -1),
        S(13, -63),     S(-13, -46),    S(4, -60),      S(19, -79),     S(-3, -36),     S(-12, -59),    S(30, -91),     S(-12, -80),
};
constexpr Score KING_TABLE[] = {
        S(-86, -136),   S(238, -101),   S(229, -75),    S(151, -67),    S(-178, -4),    S(-114, 20),    S(93, -30),     S(-24, -63),
        S(185, -81),    S(186, 7),      S(151, 19),     S(188, 8),      S(133, 23),     S(133, 35),     S(10, 47),      S(-177, 7),
        S(55, -2),      S(138, 29),     S(187, 44),     S(92, 55),      S(186, 43),     S(195, 64),     S(225, 38),     S(-41, 3),
        S(-25, -5),     S(37, 40),      S(105, 55),     S(87, 82),      S(40, 82),      S(94, 53),      S(57, 35),      S(-125, 6),
        S(-96, -24),    S(114, -12),    S(59, 41),      S(-2, 68),      S(27, 63),      S(22, 40),      S(8, 12),       S(-100, -18),
        S(-78, -27),    S(-15, 3),      S(-8, 24),      S(-3, 39),      S(1, 39),       S(2, 19),       S(-13, 2),      S(-57, -33),
        S(-64, -25),    S(-67, 1),      S(-24, 7),      S(-93, 27),     S(-49, 20),     S(-54, 11),     S(-59, 3),      S(-59, -35),
        S(-105, -99),   S(-50, -52),    S(-96, -11),    S(-104, -23),   S(-116, -26),   S(-79, -32),    S(-56, -44),    S(-70, -97),
};
constexpr Score PASSED_PAWN_BONUS[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(138, 180),    S(131, 179),    S(88, 171),     S(127, 142),    S(85, 151),     S(112, 162),    S(49, 195),     S(48, 204),
        S(93, 217),     S(62, 223),     S(63, 182),     S(35, 160),     S(19, 154),     S(19, 172),     S(-35, 207),    S(16, 206),
        S(42, 129),     S(39, 114),     S(34, 101),     S(17, 96),      S(19, 77),      S(19, 87),      S(-14, 121),    S(9, 103),
        S(19, 72),      S(-5, 74),      S(-14, 69),     S(-3, 64),      S(-12, 58),     S(-48, 62),     S(-14, 82),     S(-8, 69),
        S(5, 29),       S(-15, 42),     S(-9, 26),      S(-29, 31),     S(-11, 19),     S(2, 11),       S(8, 37),       S(23, 24),
        S(-9, 23),      S(4, 26),       S(-0, 11),      S(8, 2),        S(-7, 15),      S(-7, -0),      S(2, 11),       S(-13, 30),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};
constexpr Score BLOCKED_PASSED_PAWN_PENALTY[] = {
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
        S(-14, -170),   S(60, -221),    S(70, -204),    S(70, -237),    S(110, -222),   S(131, -305),   S(28, -310),    S(-19, -281),
        S(-1, -132),    S(43, -167),    S(21, -157),    S(24, -136),    S(11, -117),    S(78, -164),    S(46, -204),    S(-65, -176),
        S(25, -75),     S(8, -89),      S(11, -76),     S(5, -61),      S(-7, -52),     S(-9, -73),     S(26, -85),     S(17, -117),
        S(20, -24),     S(17, -45),     S(-20, -37),    S(-0, -31),     S(-30, -27),    S(32, -56),     S(-112, -42),   S(15, -42),
        S(5, -10),      S(9, -1),       S(-36, -11),    S(-1, -43),     S(-41, -13),    S(-38, -4),     S(-21, 23),     S(-86, -6),
        S(5, -26),      S(1, -38),      S(-21, -6),     S(6, -66),      S(37, -140),    S(40, -22),     S(-104, -0),    S(24, -37),
        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),
};

